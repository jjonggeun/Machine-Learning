#K출력

import numpy as np              #numpy를 np라는 이름으로 사용하겠다.      
import pandas as pd   #pandas를 pd라는 이름으로 사용하겠다.
import matplotlib.pyplot as plt #matplotlib.pyplot를 plt라는 이름으로 사용하겠다.

C=np.zeros([100,100])  #C라는 100by100의 zeros배열을 선언해놓는다.





for j in range(0,10,1):                 #T와 U의 출력에서는 행 또는 열만 바뀌었는데 K의 출력은 각 행과 열에 해당하는 값을 넣어주어야 하므로 이중배열로 만들어 주기 위해
                                        #이중for문을 만들어 준다. j가 먼저 실행되고 그 뒤 i가 0~9까지 실행이 된 후 j가 1로 넘어가는 순서이므로 j를 10의자리 수, i를 1의자리 수 라고
                                        #판단이 가능하다. 따라서 아래와 같은 for문을 작성하였다.
    for i in range(0,10,1):
        fold_dir="C:\\Users\\user\\OneDrive - 한국공학대학교\\바탕 화면\\3학년 1학기\\머신러닝실습\\4주차\\problem_1_data\\"
        file_name=str(i+j*10)+".csv"    #j에 10을 곱해주면 j는 i가 0~9까지 변할 때 j는 0, 10, 20 ~ 90의 순서로 변화하므로 이는 0~99까지 변화하고 모든 파일을 전부 반복문으로 입력받을 수 있다.
        final_file=fold_dir+file_name    #fold_dir과 fie_name을 합쳐 파일이 해당하는 위치의 0~99개 파일을 불러오는 final_str을 최종 선언
        temp_data=pd.read_csv(final_file, header=None)  #final_file이라는 최종 파일에 있는 데이터를 읽어오는데 헤더파일을 생성하지 않고 읽어온다. dataframe형태로 읽어와진다.
        temp_data=temp_data.to_numpy()     #위에서 불러온 파일은 dataframe형태이므로 슬라이싱이 안되기에 이를 numpy배열로 변환시킨다.
        C[j*10:(j*10)+10,i*10:(i*10)+10]=temp_data[70:80,80:90]       #위에서 numpy배열로 변환해주었기때문에 슬라이싱이 가능하고 dataframe형태는 불가능하다.
        
 #C에 temp_data의 70~79, 80~89번째의 데이터를 10by10으로 C에 넣어줘야 하는데 이를 위해 직접 배열을 나눠 보았더니       
 #      0번째         1번째            2번째       3번째       4번째          5번째          6번째        7번째           8번째         9번째                                 
 # C[0:10, 0:10] [0:10, 10:20] [0:10, 20:30] [0:10, 30:40] [0:10, 40:50] [0:10, 50:60] [0:10, 60:70] [0:10, 70:80] [0:10, 80:90] [0:10, 90:100]
 #       10             11             12            13                14          15              16           17              18         19                                
 # C[10:20, 0:10] [10:20, 10:20] [10:20, 20:30] [10:20, 30:40] [10:20, 40:50] [10:20, 50:60] [10:20, 60:70] [10:20, 70:80] [10:20, 80:90] [10:20, 90:100]
 # C[20:30, 0:10] [20:30, 10:20] [20:30, 20:30] [20:30, 30:40] [20:30, 40:50] [20:30, 50:60] [20:30, 60:70] [20:30, 70:80] [20:30, 80:90] [20:30, 90:100]
#이러한 형태의 변화가 나타나는데 여기서 보면, 일단 for문이 j먼저 선언되면 i가 0~9까지 변화 후 j가 변화하는 것을 이용하여 먼저 행 부분에서는 j*10으로 시작해서 (j*10)+10을 해 주면 각 변화하는 값에 맞춰 
#10개의 행을 선언하게 되고, 열은 i*10으로 시작하여 (i*10)+10의 형태로 10개의 열이 되어 총 10by10의 행렬에 temp_data값을 넣어줄 수 있다. 이중for문의 특성으로 값이 밀린다고 생각하면 쉽다.


plt.imshow(C, cmap='viridis')
plt.axis('off')
plt.show